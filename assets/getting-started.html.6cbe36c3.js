import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as n,e as a}from"./app.6fc8b7f7.js";const t={},i=a(`<h1 id="getting-started" tabindex="-1"><a class="header-anchor" href="#getting-started" aria-hidden="true">#</a> Getting Started</h1><p>This section will help you build a basic VitePress documentation site from ground up. If you already have an existing project and would like to keep documentation inside the project, start from Step 2.</p><div class="custom-container warning"><p class="custom-container-title">Note</p><p>VitePress is currently in <code>alpha</code> status. It is already suitable for out-of-the-box documentation use, but the config and theming API may still change between minor releases.</p></div><h2 id="step-1-create-a-new-project" tabindex="-1"><a class="header-anchor" href="#step-1-create-a-new-project" aria-hidden="true">#</a> Step. 1: Create a new project</h2><p>Create and change into a new directory.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">mkdir</span> vitepress-starter <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">cd</span> vitepress-starter
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Then, initialize with your preferred package manager.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">yarn</span> init
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="step-2-install-vitepress" tabindex="-1"><a class="header-anchor" href="#step-2-install-vitepress" aria-hidden="true">#</a> Step. 2: Install VitePress</h2><p>Add VitePress and Vue as dev dependencies for the project.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">yarn</span> <span class="token function">add</span> <span class="token parameter variable">--dev</span> vitepress vue
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><details class="custom-container details"><summary>Getting missing peer deps warnings?</summary><p><code>@docsearch/js</code> has certain issues with its peer dependencies. If you see some commands failing due to them, you can try this workaround for now:</p><p>On Yarn v2/v3, add this inside your rc file (<code>.yarnrc.yml</code> by default):</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">packageExtensions</span><span class="token punctuation">:</span>
  <span class="token key atrule">&#39;@docsearch/react@*&#39;</span><span class="token punctuation">:</span>
    <span class="token key atrule">peerDependenciesMeta</span><span class="token punctuation">:</span>
      <span class="token key atrule">&#39;@types/react&#39;</span><span class="token punctuation">:</span>
        <span class="token key atrule">optional</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
      <span class="token key atrule">&#39;react&#39;</span><span class="token punctuation">:</span>
        <span class="token key atrule">optional</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
      <span class="token key atrule">&#39;react-dom&#39;</span><span class="token punctuation">:</span>
        <span class="token key atrule">optional</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>On PNPM, add this in your <code>package.json</code>:</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token property">&quot;pnpm&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token property">&quot;peerDependencyRules&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;ignoreMissing&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token string">&quot;@types/react&quot;</span><span class="token punctuation">,</span>
      <span class="token string">&quot;react&quot;</span><span class="token punctuation">,</span>
      <span class="token string">&quot;react-dom&quot;</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><p>Create your first document.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">mkdir</span> docs <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">echo</span> <span class="token string">&#39;# Hello VitePress&#39;</span> <span class="token operator">&gt;</span> docs/index.md
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="step-3-boot-up-dev-environment" tabindex="-1"><a class="header-anchor" href="#step-3-boot-up-dev-environment" aria-hidden="true">#</a> Step. 3: Boot up dev environment</h2><p>Add some scripts to <code>package.json</code>.</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  ...
  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;docs:dev&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vitepress dev docs&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;docs:build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vitepress build docs&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;docs:serve&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vitepress serve docs&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  ...
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Serve the documentation site in the local server.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">yarn</span> docs:dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>VitePress will start a hot-reloading development server at <code>http://localhost:3000</code>.</p><h2 id="step-4-add-more-pages" tabindex="-1"><a class="header-anchor" href="#step-4-add-more-pages" aria-hidden="true">#</a> Step. 4: Add more pages</h2><p>Let&#39;s add another page to the site. Create a file name <code>getting-started.md</code> along with <code>index.md</code> you&#39;ve created in Step. 2. Now your directory structure should look like this.</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>.
├─ docs
│  ├─ getting-started.md
│  └─ index.md
└─ package.json
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Then, try to access <code>http://localhost:3000/getting-started</code> and you should see the content of <code>getting-started</code> is shown.</p><p>This is how VitePress works basically. The directory structure corresponds with the URL path. You add files, and just try to access it.</p><h2 id="what-s-next" tabindex="-1"><a class="header-anchor" href="#what-s-next" aria-hidden="true">#</a> What&#39;s next?</h2><p>By now, you should have a basic but functional VitePress documentation site. But currently, the user has no way to navigate around the site because it&#39;s missing for example sidebar menu we have on this site.</p><p>To enable those navigations, we must add some configurations to the site. Head to <a href="./configuration">configuration guide</a> to learn how to configure VitePress.</p><p>If you would like to know more about what you can do within the page, for example, writing markdown contents, or using Vue Component, check out the &quot;Writing&quot; section of the docs. <a href="./markdown">Markdown guide</a> would be a greate starting point.</p><p>If you want to know how to customize how the site looks (Theme), and find out the features VitePress&#39;s default theme provides, visit <a href="./theme-introduction">Theme: Introduction</a>.</p><p>When your documentation site starts to take shape, be sure to read the <a href="./deploying">deployment guide</a>.</p>`,31),o=[i];function r(d,p){return s(),n("div",null,o)}const u=e(t,[["render",r],["__file","getting-started.html.vue"]]);export{u as default};
