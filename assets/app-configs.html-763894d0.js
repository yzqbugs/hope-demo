import{_ as i,Y as o,Z as l,$ as s,a0 as e,a1 as a,a2 as t,E as p}from"./framework-9a6634be.js";const r={},c=t(`<h1 id="app-configs" tabindex="-1"><a class="header-anchor" href="#app-configs" aria-hidden="true">#</a> App Configs</h1><p>App configs are where you can define the global settings of the site. App configs define fundamental settings that are not only limited to the theme configs such as configuration for &quot;base directory&quot;, or the &quot;title&quot; of the site.</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token comment">// These are app level configs.</span>
  lang<span class="token operator">:</span> <span class="token string">&#39;en-US&#39;</span><span class="token punctuation">,</span>
  title<span class="token operator">:</span> <span class="token string">&#39;VitePress&#39;</span><span class="token punctuation">,</span>
  description<span class="token operator">:</span> <span class="token string">&#39;Vite &amp; Vue powered static site generator.&#39;</span><span class="token punctuation">,</span>
  <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="appearance" tabindex="-1"><a class="header-anchor" href="#appearance" aria-hidden="true">#</a> appearance</h2><ul><li>Type: <code>boolean</code></li><li>Default: <code>true</code></li></ul><p>Whether to enable &quot;Dark Mode&quot; or not. If the option is set to <code>true</code>, it adds <code>.dark</code> class to the <code>&lt;html&gt;</code> tag depending on the users preference.</p><p>It also injects inline script that tries to read users settings from local storage by <code>vitepress-theme-appearance</code> key and restores users preferred color mode.</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  appearance<span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="base" tabindex="-1"><a class="header-anchor" href="#base" aria-hidden="true">#</a> base</h2><ul><li>Type: <code>string</code></li><li>Default: <code>/</code></li></ul><p>The base URL the site will be deployed at. You will need to set this if you plan to deploy your site under a sub path, for example, GitHub pages. If you plan to deploy your site to <code>https://foo.github.io/bar/</code>, then you should set base to <code>&#39;/bar/&#39;</code>. It should always start and end with a slash.</p><p>The base is automatically prepended to all the URLs that start with / in other options, so you only need to specify it once.</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  base<span class="token operator">:</span> <span class="token string">&#39;/base/&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="description" tabindex="-1"><a class="header-anchor" href="#description" aria-hidden="true">#</a> description</h2><ul><li>Type: <code>string</code></li><li>Default: <code>A VitePress site</code></li></ul><p>Description for the site. This will render as a <code>&lt;meta&gt;</code> tag in the page HTML.</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  description<span class="token operator">:</span> <span class="token string">&#39;A VitePress site&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="ignoredeadlinks" tabindex="-1"><a class="header-anchor" href="#ignoredeadlinks" aria-hidden="true">#</a> ignoreDeadLinks</h2><ul><li>Type: <code>boolean</code></li><li>Default: <code>false</code></li></ul><p>When set to <code>true</code>, VitePress will not fail builds due to dead links.</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  ignoreDeadLinks<span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="lang" tabindex="-1"><a class="header-anchor" href="#lang" aria-hidden="true">#</a> lang</h2><ul><li>Type: <code>string</code></li><li>Default: <code>en-US</code></li></ul><p>The lang attribute for the site. This will render as a <code>&lt;html lang=&quot;en-US&quot;&gt;</code> tag in the page HTML.</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  lang<span class="token operator">:</span> <span class="token string">&#39;en-US&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="lastupdated" tabindex="-1"><a class="header-anchor" href="#lastupdated" aria-hidden="true">#</a> lastUpdated</h2><ul><li>Type: <code>boolean</code></li><li>Default: <code>false</code></li></ul><p>Use git commit to get the timestamp. This option enables the default theme to display the page&#39;s last updated time. You can customize the text via <a href="theme-configs#lastupdatedtext"><code>themeConfig.lastUpdatedText</code></a> option.</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  lastUpdated<span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="markdown" tabindex="-1"><a class="header-anchor" href="#markdown" aria-hidden="true">#</a> markdown</h2><ul><li>Type: <code>MarkdownOption</code></li></ul>`,31),d={href:"https://github.com/markdown-it/markdown-it",target:"_blank",rel:"noopener noreferrer"},u={href:"https://shiki.matsu.io/",target:"_blank",rel:"noopener noreferrer"},k=t(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">markdown</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token string">&#39;material-palenight&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">lineNumbers</span><span class="token operator">:</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Below are all the options that you can have in this object:</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">MarkdownOptions</span> <span class="token keyword">extends</span> <span class="token class-name">MarkdownIt</span><span class="token punctuation">.</span>Options <span class="token punctuation">{</span>
  <span class="token comment">// Custom theme for syntax highlighting.</span>
  <span class="token comment">// You can use an existing theme.</span>
  <span class="token comment">// See: https://github.com/shikijs/shiki/blob/main/docs/themes.md#all-themes</span>
  <span class="token comment">// Or add your own theme.</span>
  <span class="token comment">// See: https://github.com/shikijs/shiki/blob/main/docs/themes.md#loading-theme</span>
  theme<span class="token operator">?</span><span class="token operator">:</span>
    <span class="token operator">|</span> Shiki<span class="token punctuation">.</span>IThemeRegistration
    <span class="token operator">|</span> <span class="token punctuation">{</span> light<span class="token operator">:</span> Shiki<span class="token punctuation">.</span>IThemeRegistration<span class="token punctuation">;</span> dark<span class="token operator">:</span> Shiki<span class="token punctuation">.</span>IThemeRegistration <span class="token punctuation">}</span>

  <span class="token comment">// Enable line numbers in code block.</span>
  lineNumbers<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span>

  <span class="token comment">// markdown-it-anchor plugin options.</span>
  <span class="token comment">// See: https://github.com/valeriangalliat/markdown-it-anchor</span>
  anchor<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    permalink<span class="token operator">?</span><span class="token operator">:</span> anchor<span class="token punctuation">.</span>AnchorOptions<span class="token punctuation">[</span><span class="token string">&#39;permalink&#39;</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// markdown-it-attrs plugin options.</span>
  <span class="token comment">// See: https://github.com/arve0/markdown-it-attrs</span>
  attrs<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    leftDelimiter<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>
    rightDelimiter<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>
    allowedAttributes<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
    disable<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// markdown-it-toc-done-right plugin options</span>
  <span class="token comment">// See: https://github.com/nagaozen/markdown-it-toc-done-right</span>
  toc<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">any</span>

  <span class="token comment">// Configure the Markdown-it instance.</span>
  config<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>md<span class="token operator">:</span> MarkdownIt<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="title" tabindex="-1"><a class="header-anchor" href="#title" aria-hidden="true">#</a> title</h2><ul><li>Type: <code>string</code></li><li>Default: <code>VitePress</code></li></ul><p>Title for the site. This will be displayed in the nav bar. Also used as the suffix for all page titles unless <code>titleTemplate</code> is defined.</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  title<span class="token operator">:</span> <span class="token string">&#39;VitePress&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="titletemplate" tabindex="-1"><a class="header-anchor" href="#titletemplate" aria-hidden="true">#</a> titleTemplate</h2><ul><li>Type: <code>string | boolean</code></li></ul><p>The suffix for the title. For example, if you set <code>title</code> as <code>VitePress</code> and set <code>titleTemplate</code> as <code>My Site</code>, the html title becomes <code>VitePress | My Site</code>.</p><p>Set <code>false</code> to disable the feature. If the option is <code>undefined</code>, then the value of <code>title</code> option will be used.</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  title<span class="token operator">:</span> <span class="token string">&#39;VitePress&#39;</span><span class="token punctuation">,</span>
  titleTemplate<span class="token operator">:</span> <span class="token string">&#39;Vite &amp; Vue powered static site generator&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12);function m(v,h){const n=p("ExternalLinkIcon");return o(),l("div",null,[c,s("p",null,[e("Configre Markdown parser options. VitePress uses "),s("a",d,[e("Markdown-it"),a(n)]),e(" as the parser, and "),s("a",u,[e("Shiki"),a(n)]),e(" to highlight language syntax. Inside this option, you may pass various Markdown related options to fit your needs.")]),k])}const g=i(r,[["render",m],["__file","app-configs.html.vue"]]);export{g as default};
