import{_ as t}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as i,c as l,a as n,b as s,d as o,e,r as c}from"./app.52d624e6.js";const p={},d=e(`<h1 id="deploying" tabindex="-1"><a class="header-anchor" href="#deploying" aria-hidden="true">#</a> Deploying</h1><p>The following guides are based on some shared assumptions:</p><ul><li><p>You are placing your docs inside the <code>docs</code> directory of your project.</p></li><li><p>You are using the default build output location (<code>.vitepress/dist</code>).</p></li><li><p>VitePress is installed as a local dependency in your project, and you have set up the following scripts in your <code>package.json</code>:</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;docs:build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vitepress build docs&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;docs:serve&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vitepress serve docs&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><div class="custom-container tip"><p class="custom-container-title">Tips</p><p>If your site is to be served at a subdirectory (<code>https://example.com/subdir/</code>), then you have to set <code>&#39;/subdir/&#39;</code> as the <a href="../config/app-configs#base"><code>base</code></a> in your <code>docs/.vitepress/config.js</code>.</p><p><strong>Example:</strong> If you&#39;re using Github (or GitLab) Pages and deploying to <code>user.github.io/repo/</code>, then set your <code>base</code> to <code>/repo/</code>.</p></div><h2 id="build-and-test-locally" tabindex="-1"><a class="header-anchor" href="#build-and-test-locally" aria-hidden="true">#</a> Build and Test Locally</h2><ul><li><p>You may run this command to build the docs:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">yarn</span> docs:build
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>Once you&#39;ve built the docs, you can test them locally by running:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">yarn</span> docs:serve
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>The <code>serve</code> command will boot up a local static web server that will serve the files from <code>.vitepress/dist</code> at <code>http://localhost:5000</code>. It&#39;s an easy way to check if the production build looks fine in your local environment.</p></li><li><p>You can configure the port of the server by passing <code>--port</code> as an argument.</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;docs:serve&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vitepress serve docs --port 8080&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Now the <code>docs:serve</code> method will launch the server at <code>http://localhost:8080</code>.</p></li></ul><h2 id="netlify-vercel-aws-amplify-cloudflare-pages-render" tabindex="-1"><a class="header-anchor" href="#netlify-vercel-aws-amplify-cloudflare-pages-render" aria-hidden="true">#</a> Netlify, Vercel, AWS Amplify, Cloudflare Pages, Render</h2><p>Set up a new project and change these settings using your dashboard:</p>`,8),r=n("li",null,[n("strong",null,"Build Command:"),s(),n("code",null,"yarn docs:build")],-1),u=n("li",null,[n("strong",null,"Output Directory:"),s(),n("code",null,"docs/.vitepress/dist")],-1),v=n("strong",null,"Node Version:",-1),h=n("code",null,"14",-1),b={href:"https://developers.cloudflare.com/pages/platform/build-configuration/",target:"_blank",rel:"noopener noreferrer"},k=e(`<div class="custom-container warning"><p class="custom-container-title">Note</p><p>Don&#39;t enable options like <em>Auto Minify</em> for HTML code. It will remove comments from output which have meaning to Vue. You may see hydration mismatch errors if they get removed.</p></div><h2 id="github-pages" tabindex="-1"><a class="header-anchor" href="#github-pages" aria-hidden="true">#</a> GitHub Pages</h2><h3 id="using-github-actions" tabindex="-1"><a class="header-anchor" href="#using-github-actions" aria-hidden="true">#</a> Using GitHub Actions</h3><ol><li><p>Create a file named <code>deploy.yml</code> inside <code>.github/workflows</code> directory of your project with the following content:</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">name</span><span class="token punctuation">:</span> Deploy

<span class="token key atrule">on</span><span class="token punctuation">:</span>
  <span class="token key atrule">push</span><span class="token punctuation">:</span>
    <span class="token key atrule">branches</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> main

<span class="token key atrule">jobs</span><span class="token punctuation">:</span>
  <span class="token key atrule">deploy</span><span class="token punctuation">:</span>
    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest
    <span class="token key atrule">steps</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@v2
      <span class="token punctuation">-</span> <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/setup<span class="token punctuation">-</span>node@v3
        <span class="token key atrule">with</span><span class="token punctuation">:</span>
          <span class="token key atrule">node-version</span><span class="token punctuation">:</span> <span class="token number">16</span>
          <span class="token key atrule">cache</span><span class="token punctuation">:</span> yarn
      <span class="token punctuation">-</span> <span class="token key atrule">run</span><span class="token punctuation">:</span> yarn install <span class="token punctuation">-</span><span class="token punctuation">-</span>frozen<span class="token punctuation">-</span>lockfile

      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Build
        <span class="token key atrule">run</span><span class="token punctuation">:</span> yarn docs<span class="token punctuation">:</span>build

      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Deploy
        <span class="token key atrule">uses</span><span class="token punctuation">:</span> peaceiris/actions<span class="token punctuation">-</span>gh<span class="token punctuation">-</span>pages@v3
        <span class="token key atrule">with</span><span class="token punctuation">:</span>
          <span class="token key atrule">github_token</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.GITHUB_TOKEN <span class="token punctuation">}</span><span class="token punctuation">}</span>
          <span class="token key atrule">publish_dir</span><span class="token punctuation">:</span> docs/.vitepress/dist
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">Tips</p><p>Please replace the corresponding branch name. For example, if the branch you want to build is <code>master</code>, then you should replace <code>main</code> with <code>master</code> in the above file.</p></div></li><li><p>Now commit your code and push it to the <code>main</code> branch.</p></li><li><p>Wait for actions to complete. Then select <code>gh-pages</code> branch as GitHub Pages source in your repository settings. Now your docs will automatically deploy each time you push.</p></li></ol><h2 id="gitlab-pages" tabindex="-1"><a class="header-anchor" href="#gitlab-pages" aria-hidden="true">#</a> GitLab Pages</h2><h3 id="using-gitlab-ci" tabindex="-1"><a class="header-anchor" href="#using-gitlab-ci" aria-hidden="true">#</a> Using GitLab CI</h3><ol><li><p>Set <code>outDir</code> in <code>docs/.vitepress/config.js</code> to <code>../public</code>.</p></li><li><p>Create a file called <code>.gitlab-ci.yml</code> in the root of your project with the content below. This will build and deploy your site whenever you make changes to your content:</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">image</span><span class="token punctuation">:</span> node<span class="token punctuation">:</span><span class="token number">16</span>
<span class="token key atrule">pages</span><span class="token punctuation">:</span>
  <span class="token key atrule">cache</span><span class="token punctuation">:</span>
    <span class="token key atrule">paths</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> node_modules/
  <span class="token key atrule">script</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> yarn install
    <span class="token punctuation">-</span> yarn docs<span class="token punctuation">:</span>build
  <span class="token key atrule">artifacts</span><span class="token punctuation">:</span>
    <span class="token key atrule">paths</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> public
  <span class="token key atrule">only</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> main
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="azure-static-web-apps" tabindex="-1"><a class="header-anchor" href="#azure-static-web-apps" aria-hidden="true">#</a> Azure Static Web Apps</h2>`,8),m={href:"https://docs.microsoft.com/en-us/azure/static-web-apps/build-configuration",target:"_blank",rel:"noopener noreferrer"},g=e("<li><p>Set these values in your configuration file (and remove the ones you don&#39;t require, like <code>api_location</code>):</p><ul><li><strong><code>app_location</code></strong>: <code>/</code></li><li><strong><code>output_location</code></strong>: <code>docs/.vitepress/dist</code></li><li><strong><code>app_build_command</code></strong>: <code>yarn docs:build</code></li></ul></li>",1),y=e(`<h2 id="firebase" tabindex="-1"><a class="header-anchor" href="#firebase" aria-hidden="true">#</a> Firebase</h2><ol><li><p>Create <code>firebase.json</code> and <code>.firebaserc</code> at the root of your project:</p><p><code>firebase.json</code>:</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;hosting&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;public&quot;</span><span class="token operator">:</span> <span class="token string">&quot;docs/.vitepress/dist&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;ignore&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>.firebaserc</code>:</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;projects&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;default&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&lt;YOUR_FIREBASE_ID&gt;&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>After running <code>yarn docs:build</code>, run this command to deploy:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>firebase deploy
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><h2 id="surge" tabindex="-1"><a class="header-anchor" href="#surge" aria-hidden="true">#</a> Surge</h2><ol><li><p>After running <code>yarn docs:build</code>, run this command to deploy:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>npx surge docs/.vitepress/dist
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><h2 id="heroku" tabindex="-1"><a class="header-anchor" href="#heroku" aria-hidden="true">#</a> Heroku</h2>`,5),f={href:"https://elements.heroku.com/buildpacks/heroku/heroku-buildpack-static",target:"_blank",rel:"noopener noreferrer"},_=n("code",null,"heroku-buildpack-static",-1),w=e(`<li><p>Create a file called <code>static.json</code> in the root of your project with the below content:</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;root&quot;</span><span class="token operator">:</span> <span class="token string">&quot;docs/.vitepress/dist&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>`,1),q=n("h2",{id:"layer0",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#layer0","aria-hidden":"true"},"#"),s(" Layer0")],-1),x={href:"https://docs.layer0.co/guides/vitepress",target:"_blank",rel:"noopener noreferrer"};function j(N,T){const a=c("ExternalLinkIcon");return i(),l("div",null,[d,n("ul",null,[r,u,n("li",null,[v,s(),h,s(" (or above, by default it usually will be 14 or 16, but on Cloudflare Pages the default is still 12, so you may need to "),n("a",b,[s("change that"),o(a)]),s(")")])]),k,n("ol",null,[n("li",null,[n("p",null,[s("Follow the "),n("a",m,[s("official documentation"),o(a)]),s(".")])]),g]),y,n("ol",null,[n("li",null,[n("p",null,[s("Follow documentation and guide given in "),n("a",f,[_,o(a)]),s(".")])]),w]),q,n("p",null,[s("Refer "),n("a",x,[s("Creating and Deploying a VitePress App with Layer0"),o(a)]),s(".")])])}const I=t(p,[["render",j],["__file","deploying.html.vue"]]);export{I as default};
